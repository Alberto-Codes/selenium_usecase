# Application environment configuration.
# This setting determines the application's running environment.
# Possible values:
#   - 'development': Used during development and debugging.
#   - 'uat': User Acceptance Testing, typically used before production.
#   - 'production': The live production environment.
APP_ENV=development

# Database connection URL for DuckDB.
# This setting specifies the connection string for the DuckDB database.
# In different environments (e.g., development, UAT, production),
# this URL might point to different databases.
# Example:
#   - 'duckdb:///dev.db': Local database for development.
#   - 'duckdb:///uat.db': Database for UAT.
#   - 'duckdb:///prod.db': Database for production.
DATABASE_URL=duckdb:///dev.db

# SQLAlchemy configuration settings.
# SQLALCHEMY_ECHO controls the logging of all SQL statements.
# Set to 'True' to enable SQL query logging, which is particularly
# useful in development for debugging and ensuring queries are correct.
# In production, this should generally be set to 'False' to avoid
# unnecessary logging overhead.
SQLALCHEMY_ECHO=True

# Connection pool settings for SQLAlchemy.
# These settings are more relevant for larger databases with multiple
# concurrent connections. They may have less impact on smaller, embedded
# databases like DuckDB, but are included here for completeness.
#
# SQLALCHEMY_POOL_SIZE determines the number of connections to keep in the pool.
# SQLALCHEMY_MAX_OVERFLOW defines how many connections can be created beyond
# the pool size, to handle bursts in demand.
SQLALCHEMY_POOL_SIZE=5
SQLALCHEMY_MAX_OVERFLOW=10

# Python module search path.
# This setting prepends the 'src' directory to the PYTHONPATH,
# which is the list of directories that Python searches for modules.
# This allows the application to find modules in the 'src' directory
# without needing to adjust import statements.
PYTHONPATH=src:$PYTHONPATH
